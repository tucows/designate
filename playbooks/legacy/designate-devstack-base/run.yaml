- hosts: all
  name: Autoconverted job legacy-tempest-dsvm-designate-pdns4 from old job gate-tempest-dsvm-designate-pdns4-ubuntu-xenial
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          TEMPEST_PLUGINS='/opt/stack/new/designate-tempest-plugin'

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PYTHONUNBUFFERED=true

          services=rabbit,tempest,mysql,dstat,key
          services+=,n-api,n-api-meta,n-cpu,n-cond,n-sch,n-crt
          # placement service mandatory for nova from ocata
          if [[ "stable/newton" != $ZUUL_BRANCH ]]; then
             services+=,placement-api
          fi
          services+=,g-api,g-reg
          services+=,c-sch,c-api,c-vol,c-bak
          services+=,q-svc,q-dhcp,q-meta,q-agt,q-l3

          export DEVSTACK_GATE_TEMPEST=1
          export DEVSTACK_GATE_TEMPEST_REGEX=designate

          export DEVSTACK_LOCAL_CONFIG="enable_plugin designate https://opendev.org/openstack/designate"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"DESIGNATE_SERVICE_PORT_DNS=5322"
          export DEVSTACK_LOCAL_CONFIG+=$'\n'"DESIGNATE_BACKEND_DRIVER={{ backend }}"

          export PROJECTS="openstack/designate $PROJECTS"
          export PROJECTS="openstack/python-designateclient $PROJECTS"
          export PROJECTS="openstack/designate-dashboard $PROJECTS"
          export PROJECTS="openstack/designate-tempest-plugin $PROJECTS"

          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          if [ "{{ identity_v3_only }}" == "1" ] ; then
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"ENABLE_IDENTITY_V2=False"
          fi

          if [ "{{ manager_model }}" == "1" ] ; then
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"disable_service designate-worker designate-producer"
              export DEVSTACK_LOCAL_CONFIG+=$'\n'"enable_service designate-pool-manager designate-zone-manager"
          fi

          export OVERRIDE_ENABLED_SERVICES=$services

          if [ "{{ database }}" == "postgres" ] ; then
              export DEVSTACK_GATE_POSTGRES=1
          fi

          if [ "{{ python_version }}" == "py35" ] ; then
             export DEVSTACK_GATE_USE_PYTHON3=True
          fi

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
